/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package school_project;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.*;
import com.mysql.jdbc.*;
import java.awt.BorderLayout;
import javax.swing.table.DefaultTableModel;
import java.util.Observable;

/**
 *
 * @author fasik
 */
public class admin_menu extends javax.swing.JFrame {

    /**
     * Creates new form admin_menu
     */
    public admin_menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addbook = new javax.swing.JButton();
        viewbooks = new javax.swing.JButton();
        adduser = new javax.swing.JButton();
        issuebook = new javax.swing.JButton();
        viewissuedbooks = new javax.swing.JButton();
        viewusers = new javax.swing.JButton();
        returnbook = new javax.swing.JButton();
        removeuser = new javax.swing.JButton();
        removebook = new javax.swing.JButton();
        allbooks = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Functions");

        addbook.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        addbook.setText("Add Book");
        addbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbookActionPerformed(evt);
            }
        });

        viewbooks.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        viewbooks.setText("View Available Books");
        viewbooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbooksActionPerformed(evt);
            }
        });

        adduser.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        adduser.setText("Add User");
        adduser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adduserActionPerformed(evt);
            }
        });

        issuebook.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        issuebook.setText("Issue Book");
        issuebook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issuebookActionPerformed(evt);
            }
        });

        viewissuedbooks.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        viewissuedbooks.setText("View Issued Books");
        viewissuedbooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewissuedbooksActionPerformed(evt);
            }
        });

        viewusers.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        viewusers.setText("View Users");
        viewusers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewusersActionPerformed(evt);
            }
        });

        returnbook.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        returnbook.setText("Return Book");
        returnbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnbookActionPerformed(evt);
            }
        });

        removeuser.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        removeuser.setForeground(new java.awt.Color(255, 0, 0));
        removeuser.setText("Remove User");
        removeuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeuserActionPerformed(evt);
            }
        });

        removebook.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        removebook.setForeground(new java.awt.Color(255, 0, 0));
        removebook.setText("Remove Book");
        removebook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removebookActionPerformed(evt);
            }
        });

        allbooks.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        allbooks.setText("View All Books");
        allbooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allbooksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewbooks)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(viewusers, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(returnbook, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeuser, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addbook, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(allbooks, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adduser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))))
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(removebook, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewissuedbooks)
                    .addComponent(issuebook, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(allbooks, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbook, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adduser, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(issuebook, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewbooks, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewusers, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewissuedbooks, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnbook, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeuser, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removebook, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewbooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbooksActionPerformed
         JFrame f = new JFrame("Books Available");
         f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setLayout(new BorderLayout());
         String[] columnNames = {"Title", "Id", "Author"};
         Connection connection= null;
         try{
         connection=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/Library","root","");
         Statement stmt = connection.createStatement();
         String sql = ("SELECT * FROM available");
             ResultSet rs = stmt.executeQuery(sql);
               JTable book_list= new JTable();
               DefaultTableModel x = new DefaultTableModel();
               x.setColumnIdentifiers(columnNames);
                book_list.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        book_list.setFillsViewportHeight(true);
               book_list.setModel(x);
        String title= "";
        int id ;
        String author= "";
            int i = 0;
            while (rs.next()) {
                id = rs.getInt("book_id");
                title= rs.getString("book_name");
                author= rs.getString("author");
                x.addRow(new Object[]{id, title, author});
                i++;
            }
            if (i < 1) {
                JOptionPane.showMessageDialog(null, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE);
            }
            if (i == 1) {
                System.out.println(i + " Record Found");
            } else {
                System.out.println(i + " Records Found");
            }
                JScrollPane scrollPane = new JScrollPane(book_list);
                f.add(scrollPane);
                f.setSize(800, 400);
                f.setVisible(true);
         }// TODO add your handling code here:
         catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
         }
           f.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_viewbooksActionPerformed

    private void viewusersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewusersActionPerformed
        JFrame f = new JFrame("Users List");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setLayout(new BorderLayout());
         String[] columnNames = {"names"};
         Connection connection= null;
         try{
         connection=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/Library","root","");
         Statement stmt = connection.createStatement();
         String sql = ("SELECT * FROM users");
             ResultSet rs = stmt.executeQuery(sql);
               JTable user_list= new JTable();
               DefaultTableModel x = new DefaultTableModel();
               x.setColumnIdentifiers(columnNames);
                user_list.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        user_list.setFillsViewportHeight(true);
               user_list.setModel(x);
        String name= "";
            int i = 0;
            while (rs.next()) {
                name= rs.getString("username");
                x.addRow(new Object[]{name});
                i++;
            }
            if (i < 1) {
                JOptionPane.showMessageDialog(null, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE);
            }
            if (i == 1) {
                System.out.println(i + " Record Found");
            } else {
                System.out.println(i + " Records Found");
            }
                JScrollPane scrollPane = new JScrollPane(user_list);
                f.add(scrollPane);
                f.setSize(800, 400);
                f.setVisible(true);
         }// TODO add your handling code here:
         catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
         }
           f.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        // TODO add your handling code here:
    }//GEN-LAST:event_viewusersActionPerformed

    private void viewissuedbooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewissuedbooksActionPerformed
                    JFrame f = new JFrame("Issued books");
                    JButton b = new JButton ("Back");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setLayout(new BorderLayout());
         String[] columnNames = {"customer","book title","issue date","period"};
         Connection connection= null;
         try{
         connection=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/Library","root","");
         Statement stmt = connection.createStatement();
         String sql = ("SELECT * FROM issued");
             ResultSet rs = stmt.executeQuery(sql);
               JTable issue_list= new JTable();
               DefaultTableModel x = new DefaultTableModel();
               x.setColumnIdentifiers(columnNames);
                issue_list.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        issue_list.setFillsViewportHeight(true);
               issue_list.setModel(x);
        String name= "";
        String title = "";
        String date ="";
        String period ="";
            int i = 0;
            while (rs.next()) {
                name= rs.getString("username");
                title= rs.getString("book_name");
                date = rs.getString("issue_date");
                period= rs.getString("period");
                x.addRow(new Object[]{name,title,date,period});
                i++;
            }
            if (i < 1) {
                JOptionPane.showMessageDialog(null, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE);
            }
            if (i == 1) {
                System.out.println(i + " Record Found");
            } else {
                System.out.println(i + " Records Found");
            }
                JScrollPane scrollPane = new JScrollPane(issue_list);
                f.add(scrollPane);
                f.setSize(800, 400);
                f.setVisible(true);
         }// TODO add your handling code here:
         catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
         }
         f.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        // TODO add your handling code here:
    }//GEN-LAST:event_viewissuedbooksActionPerformed

    private void adduserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adduserActionPerformed
       create_user c= new create_user();
       c.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_adduserActionPerformed

    private void addbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbookActionPerformed
        Add_Book b = new Add_Book();
        b.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_addbookActionPerformed

    private void issuebookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issuebookActionPerformed
        Issuebook i = new Issuebook();
        i.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_issuebookActionPerformed

    private void returnbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnbookActionPerformed
        Return_book r= new Return_book();
        r.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_returnbookActionPerformed

    private void removebookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removebookActionPerformed
        Remove_book p = new Remove_book();
        p.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_removebookActionPerformed

    private void removeuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeuserActionPerformed
       Remove_user k= new Remove_user();
       k.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_removeuserActionPerformed

    private void allbooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allbooksActionPerformed
         JFrame f = new JFrame("Books Owned by the library");
         f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setLayout(new BorderLayout());
         String[] columnNames = {"Title", "Id", "Author"};
         Connection connection= null;
         try{
         connection=(Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/Library","root","");
         Statement stmt = connection.createStatement();
         String sql = ("SELECT * FROM books");
             ResultSet rs = stmt.executeQuery(sql);
               JTable book_list= new JTable();
               DefaultTableModel x = new DefaultTableModel();
               x.setColumnIdentifiers(columnNames);
                book_list.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        book_list.setFillsViewportHeight(true);
               book_list.setModel(x);
        String title= "";
        int id ;
        String author= "";
            int i = 0;
            while (rs.next()) {
                id = rs.getInt("book_id");
                title= rs.getString("book_name");
                author= rs.getString("author");
                x.addRow(new Object[]{id, title, author});
                i++;
            }
            if (i < 1) {
                JOptionPane.showMessageDialog(null, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE);
            }
            if (i == 1) {
                System.out.println(i + " Record Found");
            } else {
                System.out.println(i + " Records Found");
            }
                JScrollPane scrollPane = new JScrollPane(book_list);
                f.add(scrollPane);
                f.setSize(800, 400);
                f.setVisible(true);
         }// TODO add your handling code here:
         catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
         }
           f.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        // TODO add your handling code here:
    }//GEN-LAST:event_allbooksActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_menu().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbook;
    private javax.swing.JButton adduser;
    private javax.swing.JButton allbooks;
    private javax.swing.JButton issuebook;
    private javax.swing.JButton removebook;
    private javax.swing.JButton removeuser;
    private javax.swing.JButton returnbook;
    private javax.swing.JButton viewbooks;
    private javax.swing.JButton viewissuedbooks;
    private javax.swing.JButton viewusers;
    // End of variables declaration//GEN-END:variables
}
